#![allow(dead_code)]

use std::collections::HashMap;

use bytebuffer::ByteBuffer;
use encoding_rs::SHIFT_JIS;

//const SCR_BYTES: &[u8] = include_bytes!("../decompressed/USER08.SCN");
const SCR_BYTES: &[u8] = include_bytes!("../decompressed/USER08.SCN");
const OPCODE_METAS_BYTES: &[u8] = &[
	0x04, 0x00, 0x00, 0x00, 0x94, 0xc5, 0x00, 0x00, 0x2c, 0xca, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5c, 0xbe, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xc0, 0xc6, 0x00, 0x00, 0x30, 0xca, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xc6, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0xa4, 0xc9, 0x00, 0x00, 0x34, 0xca, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa4, 0xc9, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0xd8,0xc9, 0x00, 0x00, 0x40, 0xca, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd8, 0xc9, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x5c, 0xca, 0x00, 0x00, 0x4c, 0xca, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5c, 0xca, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xc0, 0xca, 0x00, 0x00, 0x58, 0xca, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xca, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xb0, 0xcb, 0x00, 0x00, 0x64, 0xca,0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb0, 0xcb, 0x00, 0x00, 0xb0, 0xcb, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xf8, 0xcc, 0x00, 0x00, 0x70, 0xca, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xcc, 0x00, 0x00, 0xf8, 0xcc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x7c, 0xce, 0x00, 0x00, 0x7c, 0xca, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0xce, 0x00, 0x00, 0x7c, 0xce, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x8c, 0xd2, 0x00, 0x00, 0x88, 0xca, 0x11, 0x00, 0x00, 0x00, 0x00,0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xec, 0xd2, 0x00, 0x00, 0x94, 0xca, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x78, 0xd4, 0x00, 0x00, 0xa0, 0xca, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x84, 0xd5, 0x00, 0x00, 0xac, 0xca, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0xd5, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xa4, 0xd6, 0x00, 0x00, 0xb8, 0xca, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa4, 0xd6, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xf4, 0xd6, 0x00, 0x00, 0xc0, 0xca, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0xbf, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x64, 0xd7, 0x00, 0x00, 0xcc, 0xca, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0xd7, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xc4, 0xd7, 0x00, 0x00, 0xd8, 0xca, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc4, 0xd7, 0x00, 0x00, 0xc4, 0xd7, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x50, 0xd8, 0x00, 0x00, 0xe4, 0xca, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0xd8, 0x00, 0x00, 0x50, 0xd8, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xbc, 0xd8, 0x00, 0x00, 0xf0, 0xca, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0xbc, 0xd8, 0x00, 0x00, 0xbc, 0xd8, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x58, 0xd9, 0x00, 0x00, 0xfc, 0xca, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0xd9, 0x00, 0x00, 0x58, 0xd9, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0xa8, 0xd9, 0x00, 0x00, 0x04, 0xcb, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa8, 0xd9, 0x00, 0x00, 0xa8, 0xd9, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0xf8, 0xd9, 0x00, 0x00, 0x10, 0xcb, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xd9, 0x00, 0x00, 0xf8, 0xd9, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x94, 0xda, 0x00, 0x00, 0x1c, 0xcb, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x94, 0xda, 0x00, 0x00, 0x94, 0xda, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xe0, 0xda, 0x00, 0x00, 0x28, 0xcb, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xda, 0x00, 0x00, 0xe0, 0xda, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x30, 0xdb, 0x00, 0x00, 0x34, 0xcb, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xdb, 0x00, 0x00, 0x30, 0xdb, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x88, 0xdb, 0x00, 0x00, 0x3c, 0xcb, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x88, 0xdb, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0xdc, 0x00, 0x00, 0x48, 0xcb, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0xdc, 0x00, 0x00, 0x08, 0xdc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x58, 0xdc, 0x00, 0x00, 0x54, 0xcb, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0xdc, 0x00, 0x00, 0x58, 0xdc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xa4, 0xdc, 0x00, 0x00, 0x60, 0xcb, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa4, 0xdc, 0x00, 0x00, 0xa4, 0xdc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xf0, 0xdc, 0x00, 0x00, 0x6c, 0xcb, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xdc, 0x00, 0x00, 0xf0, 0xdc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xbc, 0xe0, 0x00, 0x00, 0x78, 0xcb, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe8, 0xbf, 0x00, 0x00, 0xbc, 0xe0, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x58, 0xeb, 0x00, 0x00, 0x84, 0xcb, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0xac, 0xeb, 0x00, 0x00, 0x8c, 0xcb, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1c, 0xec, 0x00, 0x00, 0x98, 0xcb, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x68, 0xec, 0x00, 0x00, 0xa4, 0xcb, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x50, 0xed, 0x00, 0x00, 0xb0, 0xcb, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x98, 0xed, 0x00, 0x00, 0xbc, 0xcb, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x98, 0xed, 0x00, 0x00, 0xb4, 0xc0, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0xcc, 0xf2, 0x00, 0x00, 0xc8, 0xcb, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x40, 0xf3, 0x00, 0x00, 0xd4, 0xcb, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x4c, 0xf8, 0x00, 0x00, 0xe0, 0xcb, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x9c, 0xf8, 0x00, 0x00, 0xec, 0xcb, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xec, 0xf8, 0x00, 0x00, 0xf8, 0xcb, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x8c, 0xf3, 0x00, 0x00, 0x04, 0xcc, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0xf0, 0xf3, 0x00, 0x00, 0x10, 0xcc, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x74, 0xf4, 0x00, 0x00, 0x1c, 0xcc, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0xd4, 0xf5, 0x00, 0x00, 0x28, 0xcc, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x38, 0xf6, 0x00, 0x00, 0x34, 0xcc, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x88, 0xf6, 0x00, 0x00, 0x40, 0xcc, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x8c, 0xf7, 0x00, 0x00, 0x4c, 0xcc, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xdc, 0xf7, 0x00, 0x00, 0x58, 0xcc, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x74, 0x08, 0x01, 0x00, 0x64, 0xcc, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0xc1, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0xb4, 0x19, 0x01, 0x00, 0x70, 0xcc, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x84, 0x1a, 0x01, 0x00, 0x78, 0xcc, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0xec, 0xc2, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xc4, 0x1a, 0x01, 0x00, 0x80, 0xcc, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x10, 0x1b, 0x01, 0x00, 0x88, 0xcc, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x70, 0x1b, 0x01, 0x00, 0x94, 0xcc, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xb4, 0x1b, 0x01, 0x00, 0xa0, 0xcc, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x10, 0x1c, 0x01, 0x00, 0xa8, 0xcc, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0xc3, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x74, 0x1c, 0x01, 0x00, 0xb0, 0xcc, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xc0, 0x1c, 0x01, 0x00, 0xb8, 0xcc, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x10, 0x1d, 0x01, 0x00, 0xc0, 0xcc, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xc0, 0x1e, 0x01, 0x00, 0xc8, 0xcc, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x18, 0x1f, 0x01, 0x00, 0xd4, 0xcc, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x9c, 0x1f, 0x01, 0x00, 0xdc, 0xcc, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xf0, 0x1f, 0x01, 0x00, 0xe8, 0xcc, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x30, 0x20, 0x01, 0x00, 0xf4, 0xcc, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x7c, 0x20, 0x01, 0x00, 0x00, 0xcd, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x80, 0x21, 0x01, 0x00, 0x0c, 0xcd, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xc4, 0x21, 0x01, 0x00, 0x18, 0xcd, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x94, 0x22, 0x01, 0x00, 0x24, 0xcd, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x94, 0x22, 0x01, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x24, 0x24, 0x01, 0x00, 0x30, 0xcd, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x01, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x7c, 0x24, 0x01, 0x00, 0x3c, 0xcd, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x24, 0x01, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6c, 0x3b, 0x01, 0x00, 0x48, 0xcd, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6c, 0x3b, 0x01, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0xe0, 0x24, 0x01, 0x00, 0x54, 0xcd, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x24, 0x01, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x20, 0x25, 0x01, 0x00, 0x60, 0xcd, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x60, 0x25, 0x01, 0x00, 0x6c, 0xcd, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x10, 0x22, 0x01, 0x00, 0x78, 0xcd, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x6c, 0x22, 0x01, 0x00, 0x84, 0xcd, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x37, 0x01, 0x00, 0x90, 0xcd, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x1c, 0x38, 0x01, 0x00, 0x9c, 0xcd, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xe0, 0x39, 0x01, 0x00, 0xa8, 0xcd, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0xf0, 0xbc, 0x00, 0x00, 0xb4, 0xcd, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x28, 0x01, 0x00, 0xc4, 0xcd, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb8, 0xc4, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x3c, 0xf9, 0x00, 0x00, 0xd0, 0xcd, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x0c, 0xfa, 0x00, 0x00, 0xe0, 0xcd, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x58, 0xfa, 0x00, 0x00, 0xf0, 0xcd, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x58, 0xfb, 0x00, 0x00, 0x00, 0xce, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x38, 0x35, 0x01, 0x00, 0x10, 0xce, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0xd8, 0x35, 0x01, 0x00, 0x18, 0xce, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x74, 0x08, 0x01, 0x00, 0x24, 0xce, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0xc1, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x98, 0x25, 0x01, 0x00, 0x34, 0xce, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xc4, 0xe7, 0x00, 0x00, 0x40, 0xce, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x14, 0x3c, 0x01, 0x00, 0x4c, 0xce, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x3c, 0x01, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0xb8, 0x3d, 0x01, 0x00, 0x54, 0xce, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb8, 0x3d, 0x01, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1c, 0x23, 0x01, 0x00, 0x5c, 0xce, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x23, 0x01, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xd8, 0x22, 0x01, 0x00, 0x68, 0xce, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd8, 0x22, 0x01, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xbc, 0xe0, 0x00, 0x00, 0x74, 0xce, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe8, 0xbf, 0x00, 0x00, 0xbc, 0xe0, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x98, 0xed, 0x00, 0x00, 0x80, 0xce, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x98, 0xed, 0x00, 0x00, 0xb4, 0xc0, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x5c, 0x36, 0x01, 0x00, 0x8c, 0xce, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x60, 0x23, 0x01, 0x00, 0x98, 0xce, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x23, 0x01, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xa4, 0xe8, 0x00, 0x00, 0xa4, 0xce, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0xa4, 0xfb, 0x00, 0x00, 0xac, 0xce, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x70, 0x27, 0x01, 0x00, 0xc0, 0xce, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0xc4, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xb0, 0x28, 0x01, 0x00, 0xcc, 0xce, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x88, 0x31, 0x01, 0x00, 0xd8, 0xce, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0xf4, 0x33, 0x01, 0x00, 0xe4, 0xce, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x50, 0x2b, 0x01, 0x00, 0xf0, 0xce, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x00, 0x2f, 0x01, 0x00, 0x00, 0xcf, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0xa4, 0x23, 0x01, 0x00, 0x0c, 0xcf, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa4, 0x23, 0x01, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xb0, 0x26, 0x01, 0x00, 0x18, 0xcf, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x04, 0x27, 0x01, 0x00, 0x24, 0xcf, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x44, 0x27, 0x01, 0x00, 0x30, 0xcf, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x28, 0x40, 0x01, 0x00, 0x3c, 0xcf, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x98, 0xed, 0x00, 0x00, 0x48, 0xcf, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x98, 0xed, 0x00, 0x00, 0xb4, 0xc0, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x98, 0xed, 0x00, 0x00, 0x54, 0xcf, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x98, 0xed, 0x00, 0x00, 0xb4, 0xc0, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x28, 0x43, 0x01, 0x00, 0x60, 0xcf, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x43, 0x01, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xe8, 0x23, 0x01, 0x00, 0x6c, 0xcf, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe8, 0x23, 0x01, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xf8, 0x0a, 0x01, 0x00, 0x74, 0xcf, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0xc0, 0xca, 0x00, 0x00, 0x80, 0xcf, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xca, 0x00, 0x00, 0xc0, 0xca, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xd0, 0xe8, 0x00, 0x00, 0x8c, 0xcf, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd0, 0xe8, 0x00, 0x00, 0xd0, 0xe8, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x74, 0x0c, 0x01, 0x00, 0x98, 0xcf, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x0c, 0x01, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0xdc, 0x0c, 0x01, 0x00, 0xa4, 0xcf, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0xdc, 0x0c, 0x01, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0xa0, 0x10, 0x01, 0x00, 0xac, 0xcf, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa0, 0x10, 0x01, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x74, 0x15, 0x01, 0x00, 0xb4, 0xcf, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x15, 0x01, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x78, 0x18, 0x01, 0x00, 0xc0, 0xcf, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x18, 0x01, 0x00, 0x9c, 0xbc, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x1c, 0xfd, 0x00, 0x00, 0x04, 0xd0, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x02, 0x01, 0x00, 0x14, 0xd0, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x2d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0x35, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x39, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x00, 0x00, 0x00, 0x47, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x00, 0x00, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x4b, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x4d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4e, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x81, 0x41, 0x81, 0x42, 0x81, 0x76, 0x81, 0x6a, 0x81, 0x84, 0x81, 0x7a, 0x81, 0x70, 0x81, 0x68, 0x82, 0xc1, 0x82, 0xe1, 0x82, 0xe3, 0x82, 0xe5, 0x82, 0x9f, 0x82, 0xa1, 0x82, 0xa3, 0x82, 0xa5, 0x82, 0xa7, 0x83, 0x62, 0x83, 0x83, 0x83, 0x85, 0x83, 0x87, 0x83, 0x40, 0x83, 0x42, 0x83, 0x44, 0x83, 0x46, 0x83, 0x48, 0x81, 0x49, 0x81, 0x48, 0x81, 0x5b, 0x81, 0xf4, 0x81, 0x99, 0x81, 0x78, 0x81, 0x60, 0x81, 0x74, 0x00, 0x00, 0x00, 0x00, 0x81, 0x75, 0x81, 0x69, 0x81, 0x83, 0x81, 0x79, 0x81, 0x6f, 0x81, 0x67, 0x81, 0x77, 0x81, 0x73, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x10, 0x10, 0x10, 0x80, 0x10, 0x10, 0x10, 0x80, 0x5d, 0x80, 0x55, 0x80, 0x2e, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x98, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0xb1, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x8d, 0x00, 0x00, 0x00, 0x59, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0xaa, 0x00, 0x00, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x94, 0x00, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x55, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x00, 0x8f, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x92, 0x00, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x93, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x91, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 0x39, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x73, 0x00, 0x00, 0x00, 0x4b, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x99, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x10, 0x10, 0x10, 0x80, 0x30, 0x30, 0x30, 0x80, 0x60, 0x60, 0x60, 0x80, 0x80, 0x80, 0x80, 0x80, 0x10, 0x10, 0x10, 0x80, 0x80, 0x80, 0x80, 0x40, 0x10, 0x10, 0x10, 0x40, 0x60, 0x60, 0x80, 0x80, 0x10, 0x10, 0x20, 0x80, 0x60, 0x60, 0x80, 0x40, 0x10, 0x10, 0x20, 0x40, 0x00, 0x01, 0x02, 0x03, 0x04, 0x03, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00
];
const SE_NAMES: &[&str] = &[
	"SE000", "SE001", "SE002", "SE004", "SE005", "SE006", "SE007", "SE008", "SE009", "SE010", "SE011", "SE012", "SE013", "SE014", "SE020", "SE021", "SE022", "SE023", "SE024", "SE025", "SE030", "SE032", "SE040", "SE041", "SE042", "SE043", "SE044", "SE050", "SE051", "SE052", "SE053", "SE060", "SE061", "SE062", "SE063", "SE065", "SE070", "SE071", "SE072", "SE073", "SE074", "SE075", "SE080", "SE081", "SE082", "SE083", "SE084", "SE085", "SE086", "SE087", "SE088", "SE090", "SE091", "SE092", "SE093", "SE094", "SE095", "SE098", "SE099", "SE100", "SE101", "SE102", "SE103", "SE104", "SE105", "SE106", "SE107", "SE108", "SE110", "SE111", "SE112", "SE113", "SE114", "SE115", "SE116", "SE117", "SE118", "SE120", "SE121", "SE122", "SE123", "SE124", "SE125", "SE128", "SE129", "SE130", "SE131", "SE132", "SE134", "SE135", "SE136", "SE139", "SE140", "SE141", "SE142", "SE143", "SE144", "SE145", "SE146", "SE147", "SE148", "SE149", "SE150", "SE151"
];
const BG_NAMES: &[&str] = &[
	"BG_00", "BG_01", "BG_02", "BG_03", "BG_04", "BG_99", "BG_AA", "BG_BB", "BG_MM", "BG00A", "BG00E", "BG00N", "BG00NR", "BG00NW", "BG00R", "BG01A", "BG01AR", "BG01E", "BG01N", "BG01NN", "BG01NR", "BG02A", "BG02AR", "BG02E", "BG02N", "BG02NN", "BG02NR", "BG02NW", "BG03A", "BG03E", "BG03N", "BG03NR", "BG03NRR", "BG03R", "BG03RR", "BG04A", "BG04E", "BG04N", "BG04NR", "BG04R", "BG05A", "BG05AR", "BG05E", "BG05N", "BG05NN", "BG05NR", "BG06A", "BG06E", "BG06N", "BG06NR", "BG06R", "BG07A", "BG07E", "BG07N", "BG07NR", "BG07NRR", "BG07R", "BG07RR", "BG08A", "BG08E", "BG08N", "BG08NR", "BG08R", "BG09A", "BG09E", "BG09N", "BG09NR", "BG09NW", "BG09R", "BG10A", "BG10E", "BG10N", "BG10NR", "BG10R", "BG11A", "BG11AW", "BG11E", "BG11N", "BG11NR", "BG11R", "BG12A", "BG12E", "BG12N", "BG12NR", "BG12R", "BG13A", "BG13E", "BG13N", "BG13NR", "BG13R", "BG13ZA", "BG13ZE", "BG13ZN", "BG13ZNR", "BG13ZR", "BG14A", "BG14E", "BG14N", "BG14NR", "BG14R", "BG15A", "BG15E", "BG15N", "BG15NR", "BG15R", "BG16A", "BG16E", "BG16EW", "BG16N", "BG16NR", "BG16R", "BG17A", "BG17E", "BG17N", "BG17NR", "BG17R", "BG18A", "BG18N", "BG19A", "BG19E", "BG19N", "BG19NR", "BG19R", "BG20N", "BG22A", "BG22N", "BG23A", "BG23N", "BG23NR", "BG23R", "BG23ZA", "BG23ZR", "BG24A", "BG24E", "BG24N", "BG24NR", "BG24NRR", "BG24R", "BG24ZR", "BG25A", "BG25E", "BG25NN", "BG26A", "BG26N", "BG27A", "BG27E", "BG27N", "BG27R", "BG28A", "BG28N", "BG28R", "BG29A", "BG29E", "BG29N", "BG29R", "BG30N", "BG31R", "BG32A", "BG32N", "BG32R", "BG33A", "BG33N", "BG33R", "BG34A", "BG34E", "BG35NR", "BG36A", "BG36N", "BG36NN", "BG36R", "BG37NN", "BG38A", "BG800", "BG801", "BG802", "BG803", "BG804", "BG805", "BG806", "BG807", "BG808", "BG900", "BG901", "BGCAL1", "BGCAL2", "BGCAL3", "BGCAL4", "BGCAL5HA", "BGCAL5IZ", "BGCAL5KU", "BGCAL5SA", "BGCAL5YU", "BGCAL6", "BGCAL7", "EDBG00", "EDBG01", "EDBG02", "EDBG03", "EDBG04", "EDBG05", "EDBG06", "EDBG07", "EDBG08", "EDBG09", "EYECATCH", "TITLE0", "TITLE1"
];
const EV_NAMES: &[&str] = &[
	"EV_AL01", "EV_AL01B", "EV_AL02", "EV_AL03", "EV_AL04A", "EV_AL04B", "EV_AL05", "EV_AL06A", "EV_AL06B", "EV_AL06C", "EV_HA01", "EV_HA02A", "EV_HA02B", "EV_HA03A", "EV_HA03B", "EV_HA03C", "EV_HA03D", "EV_HA03E", "EV_HA03F", "EV_HA04", "EV_HA05", "EV_HA06", "EV_HA07", "EV_HA08", "EV_HA09", "EV_HA10A", "EV_HA10B", "EV_HA11", "EV_HA12", "EV_HA13A", "EV_HA13B", "EV_HA14", "EV_HA15A", "EV_HA15B", "EV_HA15C", "EV_IZ01", "EV_IZ02", "EV_IZ03", "EV_IZ04", "EV_IZ05", "EV_IZ06A", "EV_IZ06B", "EV_IZ07A", "EV_IZ07B", "EV_IZ08", "EV_IZ09A", "EV_IZ09B", "EV_IZ10", "EV_IZ11A", "EV_IZ11B", "EV_IZ12", "EV_IZ13", "EV_IZ14", "EV_KU01", "EV_KU02", "EV_KU03", "EV_KU04", "EV_KU05", "EV_KU06A", "EV_KU06B", "EV_KU07", "EV_KU08", "EV_KU09", "EV_KU10", "EV_KU11A", "EV_KU11B", "EV_KU12", "EV_KU13", "EV_KY03A", "EV_KY03B", "EV_KY04A", "EV_KY04B", "EV_KY04C", "EV_KY05", "EV_KY06", "EV_SA01", "EV_SA02A", "EV_SA02B", "EV_SA02C", "EV_SA02D", "EV_SA03", "EV_SA04", "EV_SA05", "EV_SA06A", "EV_SA06B", "EV_SA07", "EV_SA08", "EV_SA09", "EV_SA10", "EV_SA11", "EV_SA12A", "EV_SA12B", "EV_SA13", "EV_SA14A", "EV_SA14B", "EV_SA14C", "EV_YU01", "EV_YU02", "EV_YU03A", "EV_YU03B", "EV_YU04A", "EV_YU04B", "EV_YU05", "EV_YU06", "EV_YU07", "EV_YU08A", "EV_YU08B", "EV_YU09A", "EV_YU09B", "EV_YU10", "EV_YU11A", "EV_YU11B", "EV_YU12", "EV_YU13", "EV_YU14A", "EV_YU14B", "EV_YU14C", "EV_YU14D", "EV_YU15A", "EV_YU15B", "EV_YU15C", "EV_YU16A", "EV_YU16B", "EV_YU16C", "EV_YU17", "ALBAM00", "ALBAM01", "ALBAM02", "ALBAM03", "ALBAM04", "ALBAM05", "ALBAM06", "ALBAM07", "ALBAM08", "ALBAM09", "ALBAM10", "ALBAM11", "ALBAM12", "ALBAM13", "ALBAM14", "ALBAM15", "ALBAM16", "ALBAM17", "ALBAM18", "ALBAM19", "ALBAM20", "ALBAM21", "ALBAM22", "ALBAM23", "ALBAM24", "ALBAM25", "ALBAM26", "ALBAM27", "ALBAM28", "ALBAM29", "ALBAM30", "ALBAM31", "ALBAM32", "ALBAM33", "ALBAM34", "ALBAM35", "ALBAM36", "ALBAM37", "ALBAM38", "ALBAM39", "ALBAM40", "ALBAM41", "ALBAM42", "ALBAM43", "ALBAM44", "ALBAM45", "ALBAM46", "ALBAM47", "ALBAM48", "ALBAM49", "EV_OP00", "EV_OP01", "EV_YUKA", "EV_HARUKA", "EV_SAKI", "EV_KURUMI", "EV_IZUMI", "EV_END_Y00", "EV_END_YC00", "EV_END_Y01", "EV_END_H00", "EV_END_H01", "EV_END_S00", "EV_END_S01", "EV_END_K00", "EV_END_K01", "EV_END_I01", "EV_END_IC01", "EV_END_BAD00", "EV_END_BAD01", "EV_END_USER"
];
const SPRITE_NAMES: &[&str] = &[
	"CHR99", "HA01AA", "HA01AAD", "HA01AAN", "HA01AB", "HA01ABD", "HA01ABN", "HA01CA", "HA01CAD", "HA01CAN", "HA01CB", "HA01CBD", "HA01CBN", "HA01DA", "HA01DAD", "HA01DAN", "HA01DB", "HA01DBD", "HA01DBN", "HA02AA", "HA02AAD", "HA02AAN", "HA02AB", "HA02ABD", "HA02ABN", "HA02CA", "HA02CAD", "HA02CAN", "HA02CB", "HA02CBD", "HA02CBN", "HA02DA", "HA02DAD", "HA02DAN", "HA02DB", "HA02DBD", "HA02DBN", "HA03AA", "HA03AAD", "HA03AAN", "HA03AB", "HA03ABD", "HA03ABN", "HA03CA", "HA03CAD", "HA03CAN", "HA03CB", "HA03CBD", "HA03CBN", "HA03DA", "HA03DAD", "HA03DAN", "HA03DB", "HA03DBD", "HA03DBN", "HA04AA", "HA04AAD", "HA04AAN", "HA04AB", "HA04ABD", "HA04ABN", "HA04CA", "HA04CAD", "HA04CAN", "HA04CB", "HA04CBD", "HA04CBN", "HA04DA", "HA04DAD", "HA04DAN", "HA04DB", "HA04DBD", "HA04DBN", "HA05AA", "HA05AAD", "HA05AAN", "HA05AB", "HA05ABD", "HA05ABN", "HA05CA", "HA05CAD", "HA05CAN", "HA05CB", "HA05CBD", "HA05CBN", "HA05DA", "HA05DAD", "HA05DAN", "HA05DB", "HA05DBD", "HA05DBN", "HA06AA", "HA06AAD", "HA06AAN", "HA06AB", "HA06ABD", "HA06ABN", "HA06CA", "HA06CAD", "HA06CAN", "HA06CB", "HA06CBD", "HA06CBN", "HA06DA", "HA06DAD", "HA06DAN", "HA06DB", "HA06DBD", "HA06DBN", "HA07AA", "HA07AAD", "HA07AAN", "HA07AB", "HA07ABD", "HA07ABN", "HA07CA", "HA07CAD", "HA07CAN", "HA07CB", "HA07CBD", "HA07CBN", "HA07DA", "HA07DAD", "HA07DAN", "HA07DB", "HA07DBD", "HA07DBN", "HA08AA", "HA08AAD", "HA08AAN", "HA08AB", "HA08ABD", "HA08ABN", "HA08CA", "HA08CAD", "HA08CAN", "HA08CB", "HA08CBD", "HA08CBN", "HA08DA", "HA08DAD", "HA08DAN", "HA08DB", "HA08DBD", "HA08DBN", "HA09AA", "HA09AAD", "HA09AAN", "HA09AB", "HA09ABD", "HA09ABN", "HA09CA", "HA09CAD", "HA09CAN", "HA09CB", "HA09CBD", "HA09CBN", "HA09DA", "HA09DAD", "HA09DAN", "HA09DB", "HA09DBD", "HA09DBN", "HA10AA", "HA10AAD", "HA10AAN", "HA10AB", "HA10ABD", "HA10ABN", "HA10CA", "HA10CAD", "HA10CAN", "HA10CB", "HA10CBD", "HA10CBN", "HA10DA", "HA10DAD", "HA10DAN", "HA10DB", "HA10DBD", "HA10DBN", "HA11AA", "HA11AAD", "HA11AAN", "HA11AB", "HA11ABD", "HA11ABN", "HA11CA", "HA11CAD", "HA11CAN", "HA11CB", "HA11CBD", "HA11CBN", "HA11DA", "HA11DAD", "HA11DAN", "HA11DB", "HA11DBD", "HA11DBN", "HA12AA", "HA12AAD", "HA12AAN", "HA12AB", "HA12ABD", "HA12ABN", "HA12CA", "HA12CAD", "HA12CAN", "HA12CB", "HA12CBD", "HA12CBN", "HA12DA", "HA12DAD", "HA12DAN", "HA12DB", "HA12DBD", "HA12DBN", "IZ01AA", "IZ01AAD", "IZ01AAN", "IZ01AB", "IZ01ABD", "IZ01ABN", "IZ01BA", "IZ01BAD", "IZ01BAN", "IZ01BB", "IZ01BBD", "IZ01BBN", "IZ01DA", "IZ01DAD", "IZ01DAN", "IZ01DB", "IZ01DBD", "IZ01DBN", "IZ02AA", "IZ02AAD", "IZ02AAN", "IZ02AB", "IZ02ABD", "IZ02ABN", "IZ02BA", "IZ02BAD", "IZ02BAN", "IZ02BB", "IZ02BBD", "IZ02BBN", "IZ02DA", "IZ02DAD", "IZ02DAN", "IZ02DB", "IZ02DBD", "IZ02DBN", "IZ03AA", "IZ03AAD", "IZ03AAN", "IZ03AB", "IZ03ABD", "IZ03ABN", "IZ03BA", "IZ03BAD", "IZ03BAN", "IZ03BB", "IZ03BBD", "IZ03BBN", "IZ03DA", "IZ03DAD", "IZ03DAN", "IZ03DB", "IZ03DBD", "IZ03DBN", "IZ04AA", "IZ04AAD", "IZ04AAN", "IZ04AB", "IZ04ABD", "IZ04ABN", "IZ04BA", "IZ04BAD", "IZ04BAN", "IZ04BB", "IZ04BBD", "IZ04BBN", "IZ04DA", "IZ04DAD", "IZ04DAN", "IZ04DB", "IZ04DBD", "IZ04DBN", "IZ05AA", "IZ05AAD", "IZ05AAN", "IZ05AB", "IZ05ABD", "IZ05ABN", "IZ05BA", "IZ05BAD", "IZ05BAN", "IZ05BB", "IZ05BBD", "IZ05BBN", "IZ05DA", "IZ05DAD", "IZ05DAN", "IZ05DB", "IZ05DBD", "IZ05DBN", "IZ06AA", "IZ06AAD", "IZ06AAN", "IZ06AB", "IZ06ABD", "IZ06ABN", "IZ06BA", "IZ06BAD", "IZ06BAN", "IZ06BB", "IZ06BBD", "IZ06BBN", "IZ06DA", "IZ06DAD", "IZ06DAN", "IZ06DB", "IZ06DBD", "IZ06DBN", "IZ07AA", "IZ07AAD", "IZ07AAN", "IZ07AB", "IZ07ABD", "IZ07ABN", "IZ07BA", "IZ07BAD", "IZ07BAN", "IZ07BB", "IZ07BBD", "IZ07BBN", "IZ07DA", "IZ07DAD", "IZ07DAN", "IZ07DB", "IZ07DBD", "IZ07DBN", "IZ08AA", "IZ08AAD", "IZ08AAN", "IZ08AB", "IZ08ABD", "IZ08ABN", "IZ08BA", "IZ08BAD", "IZ08BAN", "IZ08BB", "IZ08BBD", "IZ08BBN", "IZ08DA", "IZ08DAD", "IZ08DAN", "IZ08DB", "IZ08DBD", "IZ08DBN", "IZ09AA", "IZ09AAD", "IZ09AAN", "IZ09AB", "IZ09ABD", "IZ09ABN", "IZ09BA", "IZ09BAD", "IZ09BAN", "IZ09BB", "IZ09BBD", "IZ09BBN", "IZ09DA", "IZ09DAD", "IZ09DAN", "IZ09DB", "IZ09DBD", "IZ09DBN", "IZ10AA", "IZ10AAD", "IZ10AAN", "IZ10AB", "IZ10ABD", "IZ10ABN", "IZ10BA", "IZ10BAD", "IZ10BAN", "IZ10BB", "IZ10BBD", "IZ10BBN", "IZ10DA", "IZ10DAD", "IZ10DAN", "IZ10DB", "IZ10DBD", "IZ10DBN", "IZ11AA", "IZ11AAD", "IZ11AAN", "IZ11AB", "IZ11ABD", "IZ11ABN", "IZ11BA", "IZ11BAD", "IZ11BAN", "IZ11BB", "IZ11BBD", "IZ11BBN", "IZ11DA", "IZ11DAD", "IZ11DAN", "IZ11DB", "IZ11DBD", "IZ11DBN", "IZ12AA", "IZ12AAD", "IZ12AAN", "IZ12AB", "IZ12ABD", "IZ12ABN", "IZ12BA", "IZ12BAD", "IZ12BAN", "IZ12BB", "IZ12BBD", "IZ12BBN", "IZ12DA", "IZ12DAD", "IZ12DAN", "IZ12DB", "IZ12DBD", "IZ12DBN", "KU01AA", "KU01AAD", "KU01AAN", "KU01AB", "KU01ABD", "KU01ABN", "KU01BA", "KU01BAD", "KU01BAN", "KU01BB", "KU01BBD", "KU01BBN", "KU02AA", "KU02AAD", "KU02AAN", "KU02AB", "KU02ABD", "KU02ABN", "KU02BA", "KU02BAD", "KU02BAN", "KU02BB", "KU02BBD", "KU02BBN", "KU03AA", "KU03AAD", "KU03AAN", "KU03AB", "KU03ABD", "KU03ABN", "KU03BA", "KU03BAD", "KU03BAN", "KU03BB", "KU03BBD", "KU03BBN", "KU04AA", "KU04AAD", "KU04AAN", "KU04AB", "KU04ABD", "KU04ABN", "KU04BA", "KU04BAD", "KU04BAN", "KU04BB", "KU04BBD", "KU04BBN", "KU05AA", "KU05AAD", "KU05AAN", "KU05AB", "KU05ABD", "KU05ABN", "KU05BA", "KU05BAD", "KU05BAN", "KU05BB", "KU05BBD", "KU05BBN", "KU06AA", "KU06AAD", "KU06AAN", "KU06AB", "KU06ABD", "KU06ABN", "KU06BA", "KU06BAD", "KU06BAN", "KU06BB", "KU06BBD", "KU06BBN", "KU07AA", "KU07AAD", "KU07AAN", "KU07AB", "KU07ABD", "KU07ABN", "KU07BA", "KU07BAD", "KU07BAN", "KU07BB", "KU07BBD", "KU07BBN", "KU08AA", "KU08AAD", "KU08AAN", "KU08AB", "KU08ABD", "KU08ABN", "KU08BA", "KU08BAD", "KU08BAN", "KU08BB", "KU08BBD", "KU08BBN", "KU09AA", "KU09AAD", "KU09AAN", "KU09AB", "KU09ABD", "KU09ABN", "KU09BA", "KU09BAD", "KU09BAN", "KU09BB", "KU09BBD", "KU09BBN", "KU10AA", "KU10AAD", "KU10AAN", "KU10AB", "KU10ABD", "KU10ABN", "KU10BA", "KU10BAD", "KU10BAN", "KU10BB", "KU10BBD", "KU10BBN", "KU11AA", "KU11AAD", "KU11AAN", "KU11AB", "KU11ABD", "KU11ABN", "KU11BA", "KU11BAD", "KU11BAN", "KU11BB", "KU11BBD", "KU11BBN", "KU12AA", "KU12AAD", "KU12AAN", "KU12AB", "KU12ABD", "KU12ABN", "KU12BA", "KU12BAD", "KU12BAN", "KU12BB", "KU12BBD", "KU12BBN", "OK01AA", "OK01AAD", "OK01AAN", "OK01AB", "OK01ABD", "OK01ABN", "OK01CA", "OK01CAD", "OK01CAN", "OK01CB", "OK01CBD", "OK01CBN", "OK01DA", "OK01DAD", "OK01DAN", "OK01DB", "OK01DBD", "OK01DBN", "OK02AA", "OK02AAD", "OK02AAN", "OK02AB", "OK02ABD", "OK02ABN", "OK02CA", "OK02CAD", "OK02CAN", "OK02CB", "OK02CBD", "OK02CBN", "OK02DA", "OK02DAD", "OK02DAN", "OK02DB", "OK02DBD", "OK02DBN", "OK03AA", "OK03AAD", "OK03AAN", "OK03AB", "OK03ABD", "OK03ABN", "OK03CA", "OK03CAD", "OK03CAN", "OK03CB", "OK03CBD", "OK03CBN", "OK03DA", "OK03DAD", "OK03DAN", "OK03DB", "OK03DBD", "OK03DBN", "OK04AA", "OK04AAD", "OK04AAN", "OK04AB", "OK04ABD", "OK04ABN", "OK04CA", "OK04CAD", "OK04CAN", "OK04CB", "OK04CBD", "OK04CBN", "OK04DA", "OK04DAD", "OK04DAN", "OK04DB", "OK04DBD", "OK04DBN", "OK05AA", "OK05AAD", "OK05AAN", "OK05AB", "OK05ABD", "OK05ABN", "OK05CA", "OK05CAD", "OK05CAN", "OK05CB", "OK05CBD", "OK05CBN", "OK05DA", "OK05DAD", "OK05DAN", "OK05DB", "OK05DBD", "OK05DBN", "OK06AA", "OK06AAD", "OK06AAN", "OK06AB", "OK06ABD", "OK06ABN", "OK06CA", "OK06CAD", "OK06CAN", "OK06CB", "OK06CBD", "OK06CBN", "OK06DA", "OK06DAD", "OK06DAN", "OK06DB", "OK06DBD", "OK06DBN", "OK07AA", "OK07AAD", "OK07AAN", "OK07AB", "OK07ABD", "OK07ABN", "OK07CA", "OK07CAD", "OK07CAN", "OK07CB", "OK07CBD", "OK07CBN", "OK07DA", "OK07DAD", "OK07DAN", "OK07DB", "OK07DBD", "OK07DBN", "OK08AA", "OK08AAD", "OK08AAN", "OK08AB", "OK08ABD", "OK08ABN", "OK08CA", "OK08CAD", "OK08CAN", "OK08CB", "OK08CBD", "OK08CBN", "OK08DA", "OK08DAD", "OK08DAN", "OK08DB", "OK08DBD", "OK08DBN", "OK09AA", "OK09AAD", "OK09AAN", "OK09AB", "OK09ABD", "OK09ABN", "OK09CA", "OK09CAD", "OK09CAN", "OK09CB", "OK09CBD", "OK09CBN", "OK09DA", "OK09DAD", "OK09DAN", "OK09DB", "OK09DBD", "OK09DBN", "OK10AA", "OK10AAD", "OK10AAN", "OK10AB", "OK10ABD", "OK10ABN", "OK10CA", "OK10CAD", "OK10CAN", "OK10CB", "OK10CBD", "OK10CBN", "OK10DA", "OK10DAD", "OK10DAN", "OK10DB", "OK10DBD", "OK10DBN", "OK11AA", "OK11AAD", "OK11AAN", "OK11AB", "OK11ABD", "OK11ABN", "OK11CA", "OK11CAD", "OK11CAN", "OK11CB", "OK11CBD", "OK11CBN", "OK11DA", "OK11DAD", "OK11DAN", "OK11DB", "OK11DBD", "OK11DBN", "SA01AA", "SA01AAD", "SA01AAN", "SA01AB", "SA01ABD", "SA01ABN", "SA01BA", "SA01BAD", "SA01BAN", "SA01BB", "SA01BBD", "SA01BBN", "SA01DA", "SA01DAD", "SA01DAN", "SA01DB", "SA01DBD", "SA01DBN", "SA02AA", "SA02AAD", "SA02AAN", "SA02AB", "SA02ABD", "SA02ABN", "SA02BA", "SA02BAD", "SA02BAN", "SA02BB", "SA02BBD", "SA02BBN", "SA02DA", "SA02DAD", "SA02DAN", "SA02DB", "SA02DBD", "SA02DBN", "SA03AA", "SA03AAD", "SA03AAN", "SA03AB", "SA03ABD", "SA03ABN", "SA03BA", "SA03BAD", "SA03BAN", "SA03BB", "SA03BBD", "SA03BBN", "SA03DA", "SA03DAD", "SA03DAN", "SA03DB", "SA03DBD", "SA03DBN", "SA04AA", "SA04AAD", "SA04AAN", "SA04AB", "SA04ABD", "SA04ABN", "SA04BA", "SA04BAD", "SA04BAN", "SA04BB", "SA04BBD", "SA04BBN", "SA04DA", "SA04DAD", "SA04DAN", "SA04DB", "SA04DBD", "SA04DBN", "SA05AA", "SA05AAD", "SA05AAN", "SA05AB", "SA05ABD", "SA05ABN", "SA05BA", "SA05BAD", "SA05BAN", "SA05BB", "SA05BBD", "SA05BBN", "SA05DA", "SA05DAD", "SA05DAN", "SA05DB", "SA05DBD", "SA05DBN", "SA06AA", "SA06AAD", "SA06AAN", "SA06AB", "SA06ABD", "SA06ABN", "SA06BA", "SA06BAD", "SA06BAN", "SA06BB", "SA06BBD", "SA06BBN", "SA06DA", "SA06DAD", "SA06DAN", "SA06DB", "SA06DBD", "SA06DBN", "SA07AA", "SA07AAD", "SA07AAN", "SA07AB", "SA07ABD", "SA07ABN", "SA07BA", "SA07BAD", "SA07BAN", "SA07BB", "SA07BBD", "SA07BBN", "SA07DA", "SA07DAD", "SA07DAN", "SA07DB", "SA07DBD", "SA07DBN", "SA08AA", "SA08AAD", "SA08AAN", "SA08AB", "SA08ABD", "SA08ABN", "SA08BA", "SA08BAD", "SA08BAN", "SA08BB", "SA08BBD", "SA08BBN", "SA08DA", "SA08DAD", "SA08DAN", "SA08DB", "SA08DBD", "SA08DBN", "SA09AA", "SA09AAD", "SA09AAN", "SA09AB", "SA09ABD", "SA09ABN", "SA09BA", "SA09BAD", "SA09BAN", "SA09BB", "SA09BBD", "SA09BBN", "SA09DA", "SA09DAD", "SA09DAN", "SA09DB", "SA09DBD", "SA09DBN", "SA10AA", "SA10AAD", "SA10AAN", "SA10AB", "SA10ABD", "SA10ABN", "SA10BA", "SA10BAD", "SA10BAN", "SA10BB", "SA10BBD", "SA10BBN", "SA10DA", "SA10DAD", "SA10DAN", "SA10DB", "SA10DBD", "SA10DBN", "SA11AA", "SA11AAD", "SA11AAN", "SA11AB", "SA11ABD", "SA11ABN", "SA11BA", "SA11BAD", "SA11BAN", "SA11BB", "SA11BBD", "SA11BBN", "SA11DA", "SA11DAD", "SA11DAN", "SA11DB", "SA11DBD", "SA11DBN", "SA12AA", "SA12AAD", "SA12AAN", "SA12AB", "SA12ABD", "SA12ABN", "SA12BA", "SA12BAD", "SA12BAN", "SA12BB", "SA12BBD", "SA12BBN", "SA12DA", "SA12DAD", "SA12DAN", "SA12DB", "SA12DBD", "SA12DBN", "THUMBS", "YU01AA", "YU01AAA", "YU01AAAD", "YU01AAAN", "YU01AAD", "YU01AAN", "YU01AB", "YU01ABA", "YU01ABAD", "YU01ABAN", "YU01ABD", "YU01ABN", "YU01CA", "YU01CAA", "YU01CAAD", "YU01CAAN", "YU01CAD", "YU01CAN", "YU01CB", "YU01CBA", "YU01CBAD", "YU01CBAN", "YU01CBD", "YU01CBN", "YU01DA", "YU01DAA", "YU01DAAD", "YU01DAAN", "YU01DAD", "YU01DAN", "YU01DB", "YU01DBA", "YU01DBAD", "YU01DBAN", "YU01DBD", "YU01DBN", "YU02AA", "YU02AAA", "YU02AAAD", "YU02AAAN", "YU02AAD", "YU02AAN", "YU02AB", "YU02ABA", "YU02ABAD", "YU02ABAN", "YU02ABD", "YU02ABN", "YU02CA", "YU02CAA", "YU02CAAD", "YU02CAAN", "YU02CAD", "YU02CAN", "YU02CB", "YU02CBA", "YU02CBAD", "YU02CBAN", "YU02CBD", "YU02CBN", "YU02DA", "YU02DAA", "YU02DAAD", "YU02DAAN", "YU02DAD", "YU02DAN", "YU02DB", "YU02DBA", "YU02DBAD", "YU02DBAN", "YU02DBD", "YU02DBN", "YU03AA", "YU03AAD", "YU03AAN", "YU03AB", "YU03ABD", "YU03ABN", "YU03CA", "YU03CAD", "YU03CAN", "YU03CB", "YU03CBD", "YU03CBN", "YU03DA", "YU03DAD", "YU03DAN", "YU03DB", "YU03DBD", "YU03DBN", "YU04AA", "YU04AAA", "YU04AAAD", "YU04AAAN", "YU04AAD", "YU04AAN", "YU04AB", "YU04ABA", "YU04ABAD", "YU04ABAN", "YU04ABD", "YU04ABN", "YU04CA", "YU04CAA", "YU04CAAD", "YU04CAAN", "YU04CAD", "YU04CAN", "YU04CB", "YU04CBA", "YU04CBAD", "YU04CBAN", "YU04CBD", "YU04CBN", "YU04DA", "YU04DAA", "YU04DAAD", "YU04DAAN", "YU04DAD", "YU04DAN", "YU04DB", "YU04DBA", "YU04DBAD", "YU04DBAN", "YU04DBD", "YU04DBN", "YU05AA", "YU05AAD", "YU05AAN", "YU05AB", "YU05ABD", "YU05ABN", "YU05CA", "YU05CAD", "YU05CAN", "YU05CB", "YU05CBD", "YU05CBN", "YU05DA", "YU05DAD", "YU05DAN", "YU05DB", "YU05DBD", "YU05DBN", "YU06AA", "YU06AAA", "YU06AAAD", "YU06AAAN", "YU06AAD", "YU06AAN", "YU06AB", "YU06ABA", "YU06ABAD", "YU06ABAN", "YU06ABD", "YU06ABN", "YU06CA", "YU06CAA", "YU06CAAD", "YU06CAAN", "YU06CAD", "YU06CAN", "YU06CB", "YU06CBA", "YU06CBAD", "YU06CBAN", "YU06CBD", "YU06CBN", "YU06DA", "YU06DAA", "YU06DAAD", "YU06DAAN", "YU06DAD", "YU06DAN", "YU06DB", "YU06DBA", "YU06DBAD", "YU06DBAN", "YU06DBD", "YU06DBN", "YU07AA", "YU07AAA", "YU07AAAD", "YU07AAAN", "YU07AAD", "YU07AAN", "YU07AB", "YU07ABA", "YU07ABAD", "YU07ABAN", "YU07ABD", "YU07ABN", "YU07CA", "YU07CAA", "YU07CAAD", "YU07CAAN", "YU07CAD", "YU07CAN", "YU07CB", "YU07CBA", "YU07CBAD", "YU07CBAN", "YU07CBD", "YU07CBN", "YU07DA", "YU07DAA", "YU07DAAD", "YU07DAAN", "YU07DAD", "YU07DAN", "YU07DB", "YU07DBA", "YU07DBAD", "YU07DBAN", "YU07DBD", "YU07DBN", "YU08AA", "YU08AAD", "YU08AAN", "YU08AB", "YU08ABD", "YU08ABN", "YU08CA", "YU08CAD", "YU08CAN", "YU08CB", "YU08CBD", "YU08CBN", "YU08DA", "YU08DAD", "YU08DAN", "YU08DB", "YU08DBD", "YU08DBN", "YU09AA", "YU09AAD", "YU09AAN", "YU09AB", "YU09ABD", "YU09ABN", "YU09CA", "YU09CAD", "YU09CAN", "YU09CB", "YU09CBD", "YU09CBN", "YU09DA", "YU09DAD", "YU09DAN", "YU09DB", "YU09DBD", "YU09DBN", "YU10AA", "YU10AAA", "YU10AAAD", "YU10AAAN", "YU10AAD", "YU10AAN", "YU10AB", "YU10ABA", "YU10ABAD", "YU10ABD", "YU10ABN", "YU10CA", "YU10CAA", "YU10CAAD", "YU10CAAN", "YU10CAD", "YU10CAN", "YU10CB", "YU10CBA", "YU10CBAD", "YU10CBAN", "YU10CBD", "YU10CBN", "YU10DA", "YU10DAA", "YU10DAAD", "YU10DAAN", "YU10DAD", "YU10DAN", "YU10DB", "YU10DBA", "YU10DBAD", "YU10DBADL", "YU10DBAN", "YU10DBD", "YU10DBN", "YU11AA", "YU11AAD", "YU11AAN", "YU11AB", "YU11ABD", "YU11ABN", "YU11CA", "YU11CAD", "YU11CAN", "YU11CB", "YU11CBD", "YU11CBN", "YU11DA", "YU11DAD", "YU11DAN", "YU11DB", "YU11DBD", "YU11DBN", "YU12AA", "YU12AAA", "YU12AAAD", "YU12AAAN", "YU12AAD", "YU12AAN", "YU12AB", "YU12ABA", "YU12ABAD", "YU12ABAN", "YU12ABD", "YU12ABN", "YU12CA", "YU12CAA", "YU12CAAD", "YU12CAAN", "YU12CAD", "YU12CAN", "YU12CB", "YU12CBA", "YU12CBAD", "YU12CBAN", "YU12CBD", "YU12CBN", "YU12DA", "YU12DAA", "YU12DAAD", "YU12DAAN", "YU12DAD", "YU12DAN", "YU12DB", "YU12DBA", "YU12DBAD", "YU12DBAN", "YU12DBD", "YU12DBN", "YU13AA", "YU13AAD", "YU13AAN", "YU13AB", "YU13CA", "CALEN1", "CALEN2", "CALEN3", "CALEN4", "CALEN5", "CALEN6", "CALEN7", "SC_1515", "SC_1530", "SC_1540", "SC_3015", "SC_3030", "SC_3040", "SC_4015", "SC_4030"
];
const OPCODE_NAMES: &[&str] = &[
	"nop",
	"end",
	"if",
	"int_goto",
	"int_call",
	"int_return",
	"ext_goto",
	"ext_call",
	"ext_return",
	"reg_calc",
	"count_clear",
	"count_wait",
	"time_wait",
	"pad_wait",
	"pad_get",
	"file_read",
	"file_wait",
	"msg_wind",
	"msg_view",
	"msg_mode",
	"msg_pos",
	"msg_size",
	"msg_type",
	"msg_color",
	"msg_cursor",
	"msg_set",
	"msg_wait",
	"msg_clear",
	"msg_line",
	"msg_speed",
	"msg_anim",
	"msg_disp",
	"sel_set",
	"sel_entry",
	"sel_view",
	"sel_wait",
	"sel_style",
	"sel_disp",
	"graph_set",
	"graph_del",
	"graph_cpy",
	"graph_mov",
	"graph_swp",
	"graph_view",
	"graph_pos",
	"graph_move",
	"graph_prio",
	"graph_anim",
	"graph_pal",
	"graph_lay",
	"graph_wait",
	"graph_disp",
	"bgm_set",
	"bgm_del",
	"bgm_req",
	"bgm_wait",
	"bgm_speed",
	"bgm_vol",
	"se_set",
	"se_del",
	"se_req",
	"se_wait",
	"se_speed",
	"se_vol",
	"voice_set",
	"voice_del",
	"voice_req",
	"voice_wait",
	"voice_speed",
	"voice_vol",
	"menu_lock",
	"save_lock",
	"save_check",
	"save_disp",
	"save_prev",
	"jump_start",
	"jump_end",
	"task_entry",
	"task_del",
	"cal_disp",
	"title_disp",
	"title_set",
	"graph_motion",
	"movie_play",
	"graph_pos_auto",
	"graph_pos_save",
	"graph_uv_auto",
	"graph_uv_save",
	"vib_set",
	"clock_disp",
	"graph_disp_ex",
	"quick_save",
	"trace_spc",
	"sys_msg",
	"sys_sel",
	"skip_lock",
	"key_lock",
	"msg_disp2",
	"sel_disp2",
	"date_disp",
	"eye_lock",
	"msg_log",
	"graph_scale_auto",
	"movie_start",
	"movie_end",
	"fade_start",
	"fade_wait",
	"effect_start",
	"effect_wait",
	"breath_lock",
	"staff_start",
	"staff_end",
	"staff_wait",
	"disk_change",
	"sel_disp3",
	"sel_disp4",
	"mask_load",
	"bg_lock",
	"bound_calc",
	"ext_jump",
	"wind_pos",
	"effect_cmd",
	"layer",
	"stand",
	"sys_event",
	"startlink",
];

fn to_hex(bytes: &[u8]) -> String {
	if bytes.is_empty() {
		"".into()
	} else {
		bytes.iter().map(|x| format!("-{:02X}", x)).collect::<String>()[1..].to_string()
	}
}

fn to_hex_proper(bytes: &[u8]) -> String {
	if bytes.is_empty() {
		"".into()
	} else {
		bytes.iter().rev().map(|x| format!("{:02X}", x)).collect::<String>()[1..].to_string()
	}
}

fn run(apply_tl: bool) {
	let tl = [("シャラーン", r#"Shalom."#),
("僕の名前は飯田億彦。私立大学の３回生にして、あの日本でも有数の財閥、飯田財閥の御曹子だ。", r#"The name's Okuhiko Iida. I'm a third-year at a private university, and the heir to the Iida Financial Group, the forefront of financial groups in Japan."#),
("僕は今、大学のゼミ合宿でこの孤島に来ている。", r#"At the moment, I find myself at a seminar camp on a remote island."#),
("ゼミが始まる前にゼミ生同士が寝食を共にし、相互の親睦を深める……というのがこのゼミ合宿の目的の%N１つなんだが、正直、僕はあまり乗り気でなかった。", r#"Before it begins in earnest, we're supposed to spend our time sleeping and eating around each other to deepen the bonds of friendship...%K%PThat's the whole goal of the place, but if I'm being frank, I really don't find it all that exciting."#),
("何が悲しくて貴重な春休みを費やして絶海の孤島に滞在しなくてはならないのか。", r#"Why did I have to sadly throw away my precious spring vacation, locked away on some remote island, cut off from the world?"#),
("全くもって、無意味極まりない───そう思っていた。", r#"Every bit of it is meaningless... or so I thought."#),
("しかし、僕はその合宿で１人の天使に出会ったのだ。", r#"Despite all that, I happened across a solitary angel."#),
("天使の名前は『樋口遙』", r#"That angel's name is Haruka Higuchi."#),
("大学内でも有名な超優等生で、年齢的には２年生なのだが、飛び級して一気に３年生になったほどだ。", r#"She's apparently a prodigy in her university, a real model student, the kind who skipped her second year straight into the third."#),
("だが、僕が彼女に惹かれたのそんなとこじゃない。", r#"And that's not even why I like her."#),
("彼女と初めて出会ったとき、天使は実在すると、確信したのだ。", r#"Our first meeting was like a sign that angels truly existed."#),
("彼女のあまりにも美しい容姿。", r#"She was way too beautiful of a woman."#),
("それはとてもこの世の者とは思えなかった。", r#"I thought there was no way this woman could be from our world."#),
("そして、僕は一瞬で遙ちゃんに恋をしていたのだ。", r#"With my darling Haruka-chan, it was love at first sight."#),
("……で、当然のことながら僕は遙ちゃんを落とすべく、口説きモードへとチェンジしたわけだが……残念ながら４月２日現在における成果はゼロと言っていい。", r#"...So, as you'd expect, I entered seduction mode in a bid to make Haruka-chan mine... Suffice it to say as of April 2nd, my results are zip. Zilch. Nada."#),
("ともかく駆け引き以前にコミュニケーションが成立しないのである。", r#"On top of that, I haven't managed even a speck of genuine communication with her, so all my strategies for afterwards have gone out the window."#),
("何をしてもほとんど無反応。", r#"She's entirely unresponsive."#),
("その徹底ぶりは五感全てが麻痺しているのかと思うほどだ。", r#"Like all five of her senses are just gone."#),
("さすがにいくらモーションをかけても何も答えてくれないのでは、攻めようがない。", r#"It's only logical that no matter how many signs I send her way, I can't begin a single plan of attack if she just doesn't respond."#),
("そして、もう１つは『石原誠』という男の存在だ。", r#"The other problem on my hands is a guy named Makoto Ishihara."#),
("容姿、頭脳、運動神経、家柄、全て僕の足元にも及ばないごくごく平凡な庶民の男だが、どうやら奴も%N遙ちゃんを狙っているらしい。", r#"He's some run-of-the-mill commoner, paling wholly in comparison to my brawn, my brains, my reflexes, AND my lineage, yet he still seems to be gunning for my Haruka-chan anyway."#),
("ことあるごとに遙ちゃんに話し掛けている。", r#"I swear he talks to her any time he gets the chance."#),
("そして、何より許せないのが、そんな三流男にほんの僅かばかりだが、遙ちゃんが心を開いているようなのだ。", r#"And what angers me the most? She's actually opening her heart to that third-rate excuse for a man, however slightly that may be."#),
("全くもって信じがたいことだ。", r#"It's just unbelievable."#),
("やはりあの４月１日に２人で海に行かせたのは間違いだった。", r#"I should've known it was a mistake letting the two of them hit the ocean together on April 1st."#),
("このままでは、考えたくもないが、遙ちゃんはアイツのものになってしまう。", r#"This is the last thing I wanted on my mind, but that dick just might actually make Haruka-chan his own."#),
("なんとかしなければ……", r#"I have to stop that from happening..."#),
("僕はロッジのリビングでソファに沈み込みながら、そう考えていた。", r#"I think all of this as I continue sinking into the living room couch at the lodge."#),
("と、その僕の目の前を遙ちゃんが通り過ぎようとしているではないか！", r#"And out of nowhere, Haruka-chan begins to pass by before my very eyes!"#),
("僕は慌てて立ちあがった。", r#"I thrust myself up in a hurry."#),
("億彦「やぁ！　遙ちゃん！　どこへ行くんだい？」", r#"Okuhiko: "Heyo! Haruka-chan! Where you off to?""#),
("遙「……」", r#"Haruka: "...""#),
("遙ちゃんはしばらく無言でそっぽを向いていたが、%Nようやくぽつりとつぶやいた。", r#"Haruka-chan silently turns away for a moment before muttering something."#),
("遙「誠の……部屋」", r#"Haruka: "Makoto's... room.""#),
("億彦「な、なんだってぇー！　なんで、あいつの部屋に！？」", r#"Okuhiko: "F-For what reason?! The heck is so important about HIS room?!""#),
("遙「釣り……」", r#"Haruka: "Fishing...""#),
("億彦「え？」", r#"Okuhiko: "Huh?""#),
("遙「誠に釣り教えてもらえるように頼みに行くの」", r#"Haruka: "I'm going so I can ask Makoto to teach me about fishing.""#),
("億彦「つ、釣り？」", r#"Okuhiko: "F-Fishing, huh?""#),
("そういえば、プールから帰った後、優夏ちゃんの提案で釣りにいったけど、結局沙紀ちゃんが高波にさらわれてうやむやになってしまっていたんだな。", r#"Now that she mentions it, Yuka talked about going fishing after we came back from the pool, but there was the whole thing with Saki-chan getting carried away by the waves instead."#),
("そうか、遙ちゃんは釣りに興味があるんだ……%Nって待てよ！", r#"So, Haruka-chan wants to go fishing... OH!"#),
("億彦「ざ、残念だけど、石原に頼んでも無駄だよ」", r#"Okuhiko: "W-Well, good luck getting any help from *Ishihara* of all people.""#),
("僕は明らかに不自然な口調で言葉をつむぎだした。", r#"I begin to lay out words with an obviously unnatural tone."#),
("遙「どうして？」", r#"Haruka: "Why is that?""#),
("億彦「アイツ、釣りなんて全くできないみたいだから。%Nこの前話していた時、そう言ってたよ」", r#"Okuhiko: "That guy? He couldn't catch a fish to save his life. If we're being honest, he told me all about it when we last got together.""#),
("───嘘だ。いや、石原が釣りをできるかどうかは%N知らない。", r#"...All a lie, naturally. I have no clue if Ishihara can fish. Maybe he can, for all I know."#),
("だが、僕は石原とそんな話はしていない。とにかく、なんとしてでもこれ以上遙ちゃんをアイツと接触させるわけにはいかなかった。", r#"I never talked about anything like that with him anyway. More importantly, I have to give my all in making sure that guy has no way of running into her again."#),
("遙「そう、なんだ……」", r#"Haruka: "I... see.""#),
("遙ちゃんがつぶやく。こころなしか落ち込んでいるように見える。", r#"Haruka-chan mutters this so dejectedly. It's somehow like she's lost the heart to try fishing anymore."#),
("それを逃さず僕は畳み掛ける。", r#"I keep up the pace, not missing my opening to set up an offer."#),
("億彦「でも、安心してくれよ。僕が教えてあげるから」", r#"Okuhiko: "Hey, not to worry. I can teach you just fine.""#),
("遙「え……億彦は釣りできるの？」", r#"Haruka: "Oh... You can fish, Okuhiko?""#),
("億彦「もちろんさ！　海釣り、川釣りなんでもござれだよ」", r#"Okuhiko: "I sure can! Across both river and sea, all fish yield to me.""#),
("遙「ほんとに？」", r#"Haruka: "Is that true?""#),
("億彦「ほんとだって！　僕を信じなよ」", r#"Okuhiko: "Truer than truth itself! Believe me on this one.""#),
("遙「信じる……？」", r#"Haruka: "I should... believe?""#),
("億彦「そうそう。絶対大漁を約束するからさ」", r#"Okuhiko: "You gotta believe. C'mon, I can promise you the biggest catch you'll ever get.""#),
("遙「約束……」", r#"Haruka: "You promise...?""#),
("遙ちゃんは僕をまっすぐみつめてそうつぶやいた。", r#"Haruka-chan stares directly at me as she mutters."#),
("こころなしかその瞳に光が宿ったような気がする。", r#"It's somehow like she's gained a light in her eyes at hearing this."#),
("そのまましばらくの間、遙ちゃんは僕を見つめていたが、やがてポツリと答えた。", r#"She holds her stare for a few moments before finally answering."#),
("遙「わかった……じゃ、億彦と釣りに行く」", r#"Haruka: "Okay... I want to go fishing with you, Okuhiko.""#),
("億彦（よっしゃぁぁぁっっっ！！！）", r#"Okuhiko: (YEEEEEEEEEEAAAAAAAAAAAHHH!!!)"#),
("僕は内心でガッツポーズをとった。", r#"On the inside, I'm pumping my fists so hard right now."#),
("ついに遙ちゃんと２人っきりになれるチャンスが訪れたのだ！", r#"Finally! Finally has the opportunity presented itself for me to be alone with Haruka-chan!"#),
("フッわるいな、石原。", r#"Heh, nothing personal, Ishihara."#),
("お前を騙すのは忍びないが、これもまた戦略の１つなのだよ、フフフ。", r#"While I am reluctant in being this underhanded about things, a win is a win regardless of the strategy, hehehe."#),
("ニヤニヤと笑いを浮かべる僕の前から遙ちゃんがとっくに姿を消していたことに僕が気づいたのはそれからしばらくたってからのことだった……", r#"It's not until moments later that I notice Haruka-chan is gone from in front of my sneering face."#),
("僕と遙ちゃんは堤防にやってきていた。", r#"She and I eventually end up at the embankment."#),
("ロッジをでてから商店街の釣具屋で釣具をレンタルし、ここに辿りついたというわけだ。", r#"When we left the lodge, I'd gone and rented fishing equipment at the tackle shop downtown. I'd made my way here after that."#),
("本当なら釣具なんて全て買ってもよかったのだが、%N僕のパパのＰＩＳＡのゴールドカードが使えなかったのだ。", r#"Rented, not bought, even though I can absolutely afford to buy anything and everything we need. It just so happened that I wasn't able to use my dad's Pisa Gold Card."#),
("生憎と僕はカードでショッピングをほとんど済ますため、現金はあまり持ち歩いていない。", r#"I mainly shop using cards, so unfortunately for me, it's rare that I have cash on hand."#),
("おかげで泣く泣くレンタルをするしかなかったのだ。", r#"So it was with a heavy heart that I decided to rent everything."#),
("全くクレジットカードも使えないなんて、これだから%N田舎は嫌になる。", r#"The barren countryside not having even the slightest ability to let me use a credit card is what pisses me off the most about places like these."#),
("まぁ、いい。", r#"Whatever, I guess."#),
("とにかく今のこの状況を最大限に活用しなければ……。", r#"Regardless of all that, I need to make the most of my current situation..."#),
("僕はレンタルした道具がつまった袋からロッドと釣り糸、浮き、疑似餌をとりだした。", r#"I grab the rods, lines, floats, and lure from the bag packed with rental equipment."#),
("すばやく、それらを組みあわせ、準備を整える。", r#"I swiftly assemble everything and get ready."#),
("遙ちゃんはそんな僕の様子をじっとみていた。", r#"Haruka-chan watches intently as I do all this."#),
("フッ早くも好感触だな。", r#"Heh, smooth sailing already."#),
("億彦「じゃ、いいかい？　これから僕がやるのをよくみててね」", r#"Okuhiko: "Paying attention? Watch what comes next.""#),
("そういって僕はロッドを振って疑似餌を飛ばした。", r#"I swing my rod and let the lure fly."#),
("釣り糸に結び付けられた浮きと疑似餌は綺麗な弧を描いて、遠くの海面にぽちゃんと落ちた。", r#"The float and lure fastened to the line draw an amazing arc before falling to the sea's surface way off in the distance."#),
("待つこと数分、予想よりも早く浮きが素早く沈む。", r#"A handful of minutes pass and the float suddenly sinks."#),
("億彦「よーし！」", r#"Okuhiko: "We got a live one!""#),
("すかさず、リールを素早く引く。", r#"I swiftly draw the reel without a second to waste."#),
("釣り糸が海面を切ってこっちに近づき、やがて海面から浮きと大き目の魚が１匹飛び出してきた。", r#"The line cuts the surface in our direction, soon revealing an immense fish jumping from the sea."#),
("遙「すごい」", r#"Haruka: "Wow.""#),
("遙ちゃんが感嘆の声を漏らす。", r#"Haruka-chan naturally lets out an expression of astonishment."#),
("くっくっ、いい感じだ。", r#"Oooh yeah, that's the stuff."#),
("僕はにやけた笑みをうかべながら魚から疑似餌を%Nとり、クーラーボックスに突っ込んだ。", r#"A grin grows across my face as I grab the lure from the fish and shove my catch into the cooler."#),
("……と", r#"...But then:"#),
("遙「何してるの？」", r#"Haruka: "What are you doing?""#),
("億彦「え？」", r#"Okuhiko: "Huh?""#),
("思いのほかきつい口調の遙ちゃんの声に僕は思わず%N身をすくめる。", r#"Her tone is so unexpectedly harsh that it makes me flinch."#),
("そんな僕を尻目に遙ちゃんはつかつかとクーラーボックスに歩みよると中から先ほど釣ったばかりの魚を取り出し、再び海の中へと戻してしまった。", r#"Shooting a glance at me, she approaches the cooler and takes out my hard-earned catch, placing it back into the sea."#),
("僕は呆然とその光景をみていたが、あわてて我を取り戻す。", r#"I can only look on in shock for a moment, though I do end up regaining control of the situation."#),
("億彦「あ、あぁ。キャッチ＆リリースってやつだね。さすが、遙ちゃん。優しいね」", r#"Okuhiko: "Right, right. Catch and release, yeah? That's my Haruka-chan, the kindest woman who ever lived.""#),
("遙「優しい？」", r#"Haruka: "I'm kind?""#),
("億彦「そうだよ。釣った魚を逃がしてあげるなんて」", r#"Okuhiko: "You know it. Setting free that poor fish we just caught.""#),
("遙「私、わからない……私、心がないから」", r#"Haruka: "I don't understand... because I have no heart.""#),
("遙ちゃんはふいっと海のほうに視線をはずした。", r#"Haruka-chan shifts her gaze to the sea before us."#),
("その顔からはなにも読み取ることはできなかった。", r#"I can't read her expression in the slightest."#),
("『心がないから』", r#"'Because I have no heart.'"#),
("僕はその言葉を聞くのは初めてではなかった。", r#"I've heard her say that phrase before."#),
("昨日、一昨日にわたる僕の求愛攻勢、それに対して遙ちゃんはほとんど無反応だったが、時折返す言葉はほとんどこのセリフで占められていた。", r#"Just yesterday and the day before that, she entirely avoided my advances. But the few words she spoke were almost always that same phrase."#),
("一体、どういうことなんだろう？", r#"What does she even mean by that?"#),
("確かに遙ちゃんは感情の起伏は激しいとは決して言えない。", r#"Sure, you could easily posit that Haruka-chan doesn't quite experience emotional highs and lows like the rest of us."#),
("だが、『心がない』というのは……", r#"But to say she doesn't have a heart..."#),
("僕は海を見つめる遙ちゃんを見据える。", r#"I fix my eyes on her as she continues staring at the sea."#),
("どうしてだろうか。", r#"Why is she the way that she is?"#),
("そっけない態度をとり続けている遙ちゃんに対して諦めようなどという気持ちは全く湧き上がってこない。", r#"I'm entirely dedicated to never giving up on Haruka-chan, even with that blunt attitude of hers."#),
("逆になんとしてでも遙ちゃんを落としたいという気持ちは高まるばかりだ。", r#"Conversely, my thirst for winning her over is stronger than ever before."#),
("今まで数え切れないほどの女の子と付き合ってきたが、こんなことはなかった。", r#"I've been with so many girls that I've lost count. But this? I've never experienced this in my life."#),
("遙ちゃんのことをもっと知りたい。", r#"I want to know so much more about her."#),
("もっと僕のことを知って欲しい。", r#"And I want her to know so much more about me."#),
("心の底からそう思う。", r#"Those are the deepest desires of the bottom of my heart."#),
("遙ちゃん、君は一体何者なんだい？…….", r#"Haruka-chan, just who on earth are you...?"#),
("心の中で目の前にいる遙ちゃんに問い掛ける。", r#"In my mind's eye, I picture myself asking her this."#),
("だが、当然のことながら答えが返ってくるはずもなかった。", r#"Not that I expect a reply from doing that."#),
("遙「……いっぱい釣れたね、億彦」", r#"Haruka: "...That is a lot of fish you have caught, Okuhiko.""#),
("顔をオレンジ色に染めた遙ちゃんが言った。", r#"She speaks as the setting sun dyes her face orange."#),
("時はすでに夕刻。", r#"It's already evening by now."#),
("周りの景色はすっかり夕焼けに包まれている。", r#"The scenery all around us has already been completely enveloped by the sunset's glow."#),
("あれから数時間、僕らはすっかり釣りに夢中になってしまっていた。", r#"We spent hours just lost in our own little world as we continued fishing together."#),
("ロッドを投げ込む度にいとも簡単にヒットしまくったのだ。", r#"Fish would come no sooner than I threw my rod."#),
("遙ちゃんは夢中になって何度も何度も釣っては投げ、釣っては投げを繰り返した。", r#"Haruka was so lost in it that she would cast her line over and over and over."#),
("そんな遙ちゃんにつられてか、僕も我を忘れて釣りに没頭してしまっていた。", r#"Maybe it's because of Haruka-chan that I found myself so enthralled by fishing."#),
("数時間などという時間は僕らにとってはほんの一瞬でしかなかった。", r#"Those hours had felt as mere moments."#),
("そして、今僕らはロッジの入り口にたどり着いた。", r#"By now, we've made it the entrance of the lodge."#),
("そのまま中に入ろうとする遙ちゃんを僕は慌てて引き止める。", r#"Haruka-chan is on her way inside when I quickly try and stop her."#),
("億彦「遙ちゃん！」", r#"Okuhiko: "Haruka-chan!""#),
("遙「何？」", r#"Haruka: "Yes?""#),
("億彦「あのさ、今日は楽しかったかな？」", r#"Okuhiko: "You had a whale of a time today, yeah?""#),
("遙ちゃんは僕の問に、一瞬、逡巡する様子を見せたがすぐに答えた。", r#"She seems to hesitate at my question momentarily before instantly giving her answer."#),
("遙「うん、楽しかったよ。今までにないくらい」", r#"Haruka: "Yes, I had a fun time. More than ever before.""#),
("そういうと遙ちゃんはすばやくドアを開け、ロッジの中へと入っていった。", r#"With that, she nimbly opens the door and goes inside."#),
("頬を僅かに染めながら。", r#"She does this while slightly blushing."#),
("……染めながら！？", r#"...WHILE BLUSHING?!"#),
("億彦「……う、うぉぉぉっっっ！」", r#"Okuhiko: "Ooooooohhiiiiee!""#),
("思わず僕は柄にもなく嬌声をあげていた。", r#"I instinctively let out a very unusual noise."#),
("あの遙ちゃんが！　何をいっても素っ気無かった遙ちゃんが！　頬を染めて答えてくれた！？", r#"Oh, my Haruka-chan! My Haruka-chan, so blunt in response to anything I might say! And yet you blush?!"#),
("億彦「いける！　これはいけるぞ！」", r#"Okuhiko: "I am so in! I've got this in the bag!""#),
("ついに遙ちゃんの頑なな扉をほんの僅かだが開くことに成功したのだ！", r#"That stubborn door of Haruka-chan's has finally been opened! If only just a little!"#),
("ふっふっふっ！　ざまあみろ、石原！　どうやら１歩リードしたのは僕のほうだな！", r#"Mwahahaha! In your face, Ishihara! I am he who is one step ahead!"#),
("やってやるぜ！　遙ちゃんのハートを最終的にゲットするのは俺だ！　はっはっはっ！", r#"Let's do this! I'll show you that Haruka-chan's heart belongs to ME! HAHAHA!"#),
("優夏「おんや、なんだかたのしそうれすねぇ、億彦たん？」", r#"Yuka: "Oooh? Yer sure havin' fuuun, huh, Okuhiko-taaan?""#),
("億彦「いやーそうなんだよ。実は遙ちゃんが……」", r#"Okuhiko: "Oh, it's nothing, really. You see, actually, Haruka-chan was just...""#),
("億彦「っておわぁっ！？」", r#"Okuhiko: "Wha—hey?!""#),
("いきなり目の前に現れた優夏ちゃんの顔に僕は思わずのけぞった。", r#"I spontaneously fall backwards at Yuka-chan's face suddenly appearing in front of my own."#),
("優夏「ん？　なんなんれすかぁ？　ひとのかおみておどろいて。失礼なひとれすねぇ」", r#"Yuka: "Mm? Whas'a matter? You sheem shocked... at my faysh. Ish rude to shtare.""#),
("優夏ちゃんはジト目で僕を睨み、ずずいっとさらに%N僕との距離を詰めた。", r#"She glares at me with contempt as she slowly closes the distance between the two of us."#),
("その口から、いや全身から猛烈なアルコール臭が%N漂う。", r#"I can smell the alcohol on her, it's obvious from her breath... or rather, her whole body."#),
("みればその右手には一升瓶が握られていた。", r#"Taking a closer look, I can see a whole 1.8 liter bottle of sake in her right hand."#),
("側面に『地酒　夜叉猿』というラベルが貼られている。", r#"It's labeled "Local Sake Yashazaru" on the side."#),
("億彦「ゆ、優夏ちゃん、大分酔ってるみたいだね」", r#"Okuhiko: "Y-Yuka-chan, you seem *really* drunk right now.""#),
("優夏「んーあんだってー？」", r#"Yuka: "Wham'd you jus' shay?""#),
("億彦「いや、飲みすぎだって……」", r#"Okuhiko: "I just mean, you've had too much to drink...""#),
("優夏「あー！　はいはい、億彦たんも飲みたいのね。はい、どうじょ」", r#"Yuka: "Aaah! Riiigh', riiigh'o. O-Okuhiko-tan wan get a little drinky too! 'Kaaay, drin' up!""#),
("億彦「あ、こりゃどうも」", r#"Okuhiko: "Wow, thanks.""#),
("億彦「ってちっがーう！　……はぁ。もういいよ。気のすむまで飲んでてください」", r#"Okuhiko: "...NOT! *Sigh*... I've had enough. Just drink your own share for all I care.""#),
("僕はそう言って優夏ちゃんに背を向けた。", r#"I turn around and leave Yuka with those words."#),
("が！", r#"But then!"#),
("優夏「こぉんら、億彦ぉー！　人の勧めた酒を飲めんとは%N何様のつもりじゃあー！　おのれぇ……成敗！」", r#"Yuka: "'Ow could you, O-Okuhikooo! Who'd you think y'are, turning down a drink some'n just offered you! I shay... off with yer head!""#),
("億彦「え？」", r#"Okuhiko: "Huh?""#),
("何かを振りかぶる音に僕は優夏ちゃんの方を向き直ろうとするが……", r#"Upon hearing something in her hands, I try to turn back around, but..."#),
("ゴインッ", r#"*THUMP*"#),
("億彦「ひゃいっ！」", r#"Okuhiko: "Aaaaiiiieeee!""#),
("後頭部に凄まじい衝撃を受け、僕は床に倒れ付した。", r#"An enormous impact reaches the back of my head before I simply fall to the floor."#),
("意識を失う寸前、僕が見たものは血痕がついた%N一升瓶を握り締めている優夏ちゃんの姿だった……。", r#"As my consciousness leaves me, I'm met with one final sight: Yuka standing before me, clutching one very bloodstained bottle..."#),
("？？「……くん」", r#"???: "...-kun.""#),
("？？「……ひこくん」", r#"???: "...hiko-kun.""#),
("？？「……億彦くん！」", r#"???: "...Okuhiko-kun!""#),
("耳元で誰かが僕の名前を呼んだ。", r#"I can hear someone calling me."#),
("億彦「う、うーん」", r#"Okuhiko: "Y-Yeah?""#),
("ズキズキする後頭部を抑えながら、僕はなんとか起き上がる。", r#"Despite the throbbing pain in my head, I manage to get up."#),
("優夏「大丈夫、億彦くん？」", r#"Yuka: "Are you all right, Okuhiko-kun?""#),
("目の前には心配そうな顔をしてこちらを見つめる、テニスウェア姿の優夏ちゃんがいた。", r#"Yuka-chan is standing in front of me in tennis attire, wearing an apparently concerned expression."#),
("……ってテニスウェア？", r#"...Wait, tennis attire?"#),
("優夏「もぅー心配したよー。ごめんね、ラケット思いっきりぶつけちゃって」", r#"Yuka: "I was so, so worried! I guess I put a bit too much strength into my racket, I'm sorry about that.""#),
("優夏ちゃんの言葉に慌てて当たりを見渡す。周りには数面のテニスコートが広がっていた。", r#"Her words cause me to examine my surroundings in a panic. We're completely encircled by tennis courts."#),
("も、もしかして……", r#"D-Don't tell me..."#),
("腕にはめていた時計の日付表示に目を落とす。", r#"I look down on my watch and look at the date."#),
("……し、４月１日！？", r#"A-April 1st?!"#),
("優夏「そういえば、気を失っている間。億彦くん、なんか遙ちゃんがどうとか釣りがどうとかつぶやいていたけど……？」", r#"Yuka: "You know, you were out for a while. I think you said something about... fishing? And Haruka-chan?""#),
("億彦「のわぁぁぁぁっ！！！」", r#"Okuhiko: "NOOOOOOOOOOOOOOOOOOOOOOOOOO!!!""#),
("僕は思わず絶叫していた。", r#"A scream leaves my body before I even realize it."#),
("億彦「い、今までのは全て夢か？　僕はずっと４月１日に優夏ちゃんにテニスラケットで殴られて気を失っていたのか？」", r#"Okuhiko: "Was all of it just a dream? Had it really just been because Yuka had smacked me with a racket on April 1st?""#),
("億彦「せ、せっかく遙ちゃんと少し仲良くなれたと思ってたのにぃ！」", r#"Okuhiko: "I-I thought I got to know Haruka-chan, even just a little!""#),
("優夏「え？　お、億彦くん何言ってるの？」", r#"Yuka: "Um... O-Okuhiko-kun, what are you talking about?""#),
("優夏ちゃんが心配そうに僕に声をかけるが、僕は力なく微笑みを返すだけで精一杯だった。", r#"Yuka-chan is clearly worried about me, but the most I can do is flash a weak smile in response."#),
("優夏「うーん、やっぱり打ち所が悪かったのかしら。病院行く？」", r#"Yuka: "Hmm... Maybe I hit a really critical spot. Should we take you to the hospital?""#),
("億彦「……いや、いいよ。それよりテニス、やろうか？　どうせ石原たちは既に海にいっちゃったんだろ？」", r#"Okuhiko: "...No, I'm fine. Let's just... play tennis, okay? Ishihara and the girls are already over near the sea, aren't they?""#),
("優夏「う、うん。そうだけど。本当に大丈夫、億彦くん？」", r#"Yuka: "Y-Yeah. They are, but even... are you *sure* you're all right, Okuhiko-kun?""#),
("億彦「ああ、ばっちりさ！　それよりはやいとこやろうじゃないか」", r#"Okuhiko: "Yeah, better than ever! Let's get this show on the road.""#),
("僕は半ばヤケクソ気味に叫んだ。", r#"Half of me screams this out of sheer desperation."#),
("何か無性にむしゃくしゃして体を動かさなくて気がすまなくなっていたのだ。", r#"Being stuck on some irritatingly sexless feeling compels me to get my body moving already before I lose my mind thinking about it."#),
("優夏「わかった。よーしじゃあやろうか！」", r#"Yuka: "Sure thing, then. Let's get started!""#),
("優夏ちゃんはそう言うとコートに立ち、僕と向かい合った。そしてラケットとボールを構える。", r#"Yuka-chan gets herself set facing me as she says this, then brandishing her racket and the ball."#),
("優夏「この日のために開発した新サーブ！　受けるがよい！」", r#"Yuka: "I have been developing this serve for this day! Take THIS!""#),
("億彦「え？　新サーブ」", r#"Okuhiko: "Huh? A serve you developed?""#),
("優夏「名づけて！　『ディープアルマゲドンメテオインパクトサーブ！』」", r#"Yuka: "Go forth! Deep Armageddon Meteor Impact Serve!""#),
("優夏ちゃんは叫ぶと、ボールを空高く舞い上げた！", r#"Yuka-chan shouts with all her heart as she launches the ball into high orbit."#),
("そしてボールが落下してきた次の瞬間！", r#"And then, as the ball drops...!"#),
("優夏「隕石さん、隕石さん！　私が生きてる間は地球にはやってこないで！」", r#"Yuka: "Meteorite, oh meteorite! So long as I live, stay far above this earth!""#),
("優夏「ドカドカズドズドボコボコドォーン！」", r#"Yuka: "Bam! Thud! Crash! BOOM!""#),
("まさに隕石のように凄まじいスピードとパワーをもって優夏ちゃんのサーブが放たれた。", r#"She delivers her serve with the speed and power of an actual meteorite."#),
("ボールは狙い違わず、億彦の顔面を！　……って、え？", r#"The ball perfectly aims for... Okuhiko's face! ...Wait, what?"#),
("億彦「ぶぎゅるわっ！」", r#"Okuhiko: "BAGHWAH!""#),
("顔面にモロにボールを食らい、僕はあっけなく倒れ伏した。", r#"The ball slams against my face and I fall to the ground instantly."#),
("優夏「きゃぁっ！？　億彦くん、大丈夫？」", r#"Yuka: "Eek! O-Okuhiko-kun, are you all right?""#),
("薄れゆく意識の中で、駆け寄ってきた優夏ちゃんが%N懸命に僕を揺り動かすのがわかった。", r#"I can feel Yuka-chan running up to me and shaking me as hard as possible as my consciousness starts to fade."#),
("（い、いいんだよ。優夏ちゃん。そのままで）", r#"(Th-This is fine, Yuka-chan. Really. Things are fine as they are)"#),
("僕は胸中で呟いた。", r#"I can only groan within my own mind."#),
("（ちょっと、しばらくの間、寝させてくれ……%Wも%Wう、%W%N疲%Wれ%Wた）", r#"(Let me lie here for the time being, please... I'm so worn out)"#),
("ゆっくりと薄れゆく意識の中で僕は最後にこう思った。", r#"Those are my final thoughts as my consciousness slowly dims."#),
("（僕にしばらく……%T030しばらくの間……）", r#"(For the time being... if only for a minute...)"#),
("（休みを……%T060ＣＵＲＥ《くれ》）", r#"(Because a rest... would be the cure)"#)];
	let mut buf = ByteBuffer::from_bytes(SCR_BYTES);
	let mut out = String::new();
	//let header_size = buf.read_u8().unwrap();
	//println!("header {} bytes", header_size);
	//buf.set_rpos(header_size as usize);
	let mut tl_idx = 0;
	let mut unimpl = HashMap::new();
	println!("{:04X}", SPRITE_NAMES.iter().position(|x| x == &"YU03CA").unwrap());
	assert_eq!(SPRITE_NAMES[0x42E], "YU03CA");
	let mut last_line_ends_with_newline = true;
	let mut last_cmd_was_line = false;
	let mut text_id = 0;
	let mut read_file = 0;
	loop {
		let off = buf.get_rpos();
		let opcode = buf.read_u8().unwrap();
		if opcode == 0xFF {
			break;
		}
		let full_len = u32::from_le_bytes(OPCODE_METAS_BYTES[opcode as usize * 0x18..][..4].try_into().unwrap());
		let name = opcode.to_string();
		let name = *OPCODE_NAMES.get(opcode as usize).unwrap_or(&name.as_str());
		let args = buf.read_bytes(full_len as usize - 1).unwrap();
		if name != "msg_disp2" {
			assert!(last_line_ends_with_newline);
		}
		match name {
			"msg_disp2" => {
				let msg_pos = u32::from_le_bytes(args[3..3 + 4].try_into().unwrap());
				let mut msg_end = msg_pos;
				while SCR_BYTES[msg_end as usize] != 0 {
					msg_end += 1;
				}
				let msg = SHIFT_JIS.decode(&SCR_BYTES[msg_pos as usize..msg_end as usize]).0.to_string();
				if apply_tl {
					if let Some(x) = msg.strip_prefix(tl[tl_idx].0) {
						let tled = if x == "%K%P" {
							format!("{}\n", tl[tl_idx].1)
						} else {
							format!("{}{}", tl[tl_idx].1, x)
						}.replace("%K%P", "\n{textColor 0 2}")
						.replace("%K", "{textColor 0 2}")
						.replace("%N", "  ")
						.replace("Yuka: \"", "【Yuka】 \"")
						.replace("Haruka: \"", "【Haruka】 \"")
						.replace("Makoto: \"", "【Makoto】 \"")
						.replace("Kurumi: \"", "【Kurumi】 \"")
						.replace("Izumi: \"", "【Izumi】 \"")
						.replace("Okuhiko: \"", "【Okuhiko】 \"")
						.replace("Okuhiko: (", "【Okuhiko】 (")
						.replace("優夏「", "【優夏】  「")
						.replace("遙「", "【遙】  「")
						.replace("億彦「", "【億彦】  「")
						.replace("億彦（", "【億彦】  （")
						.replace("%T030", "{delay 30}")
						.replace("%T060", "{delay 60}")
						.replace("%W", "{delay 5}");
						println!("&{off:04X}: {}.{} {}-Z-{} @{}", name, full_len, to_hex(&args[..3]), to_hex(&args[3 + 4..]), format!("{}{}", tled, x));
						if last_line_ends_with_newline {
							out = format!("{}[00000000] 10: text {:02x}\n", out, text_id);
							text_id += 1;
						}
						out = format!("{}{{textColor 0 2}}{}", out, tled);
						last_line_ends_with_newline = tled.ends_with('\n');
					} else {
						panic!("what!? {}\n!= {}", msg, tl[tl_idx].0);
					}
				} else {
					println!("{}.{} {}-Z-{} @{}", name, full_len, to_hex(&args[..3]), to_hex(&args[3 + 4..]), msg);
					let tled = if let Some(msg) = msg.strip_suffix("%K%P") {
						format!("{}\n", msg)
					} else {
						msg
					}.replace("%K%P", "\n{textColor 0 2}")
					.replace("%K", "{textColor 0 2}")
					.replace("%N", "  ")
					.replace("Yuka: \"", "【Yuka】 \"")
					.replace("Haruka: \"", "【Haruka】 \"")
					.replace("Makoto: \"", "【Makoto】 \"")
					.replace("Kurumi: \"", "【Kurumi】 \"")
					.replace("Izumi: \"", "【Izumi】 \"")
					.replace("Okuhiko: \"", "【Okuhiko】 \"")
					.replace("Okuhiko: (", "【Okuhiko】 (")
					.replace("優夏「", "【優夏】  「")
					.replace("遙「", "【遙】  「")
					.replace("億彦「", "【億彦】  「")
					.replace("億彦（", "【億彦】  （")
					.replace("%T030", "{delay 30}")
					.replace("%T060", "{delay 60}")
					.replace("%W", "{delay 5}");
					println!("&{off:04X}: {}.{} {}-Z-{} @{}", name, full_len, to_hex(&args[..3]), to_hex(&args[3 + 4..]), tled);
					if last_line_ends_with_newline {
						out = format!("{}[00000000] 10: text {:02x}\n", out, text_id);
						text_id += 1;
					}
					out = format!("{}{{textColor 0 2}}{}", out, tled);
					last_line_ends_with_newline = tled.ends_with('\n');
				}
				tl_idx += 1;
			}
			"graph_disp" | "graph_disp_ex" => {
				let mut msg_pos = u32::from_le_bytes(args[3..3 + 4].try_into().unwrap());
				let mut msg_end = msg_pos + 12;
				let mut graph_objs = String::new();
				let mut cmt = String::new();
				//while SCR_BYTES[msg_end as usize] != 0 {
				//	msg_end += 1;
				//}
				//println!("since last {}", msg_pos - last_g);
				let graph_obj = &SCR_BYTES[msg_pos as usize..msg_end as usize];
				let img_idx = graph_obj[4] as usize | ((graph_obj[5] as usize & 0xF) << 8);
				let img_name = match graph_obj[5] >> 4 {
					1 => BG_NAMES[img_idx],
					2 => EV_NAMES[img_idx],
					3 => if img_idx == 0xFFF {
						"~"
					} else {
						SPRITE_NAMES[img_idx]
					},
					x => panic!("omaga {:X}", x)
				};
				if graph_obj[0] == 0 {
					cmt = format!("{} #bg {}", cmt, img_name);
					if img_name == "BG_00" {
						out += "[00000000] 10: removeBG 0 0 0\n";
					} else if img_name == "BG_01" {
						out += "[00000000] 10: removeBG 1 0 0\n";
					} else {
						out += format!("[00000000] 10: bgload 00000000 {} 0 1\n", match img_name {
							"BG900" => "fullwin",
							x => x
						}).as_str();
					}
				} else if graph_obj[0] == 1 || graph_obj[0] == 3 {
					let mut sprite_pos_id = graph_obj[9];
					let sprite_slot_id = graph_obj[0];
					cmt = format!("{} #sprite {} pos:{} slot:{}", cmt, img_name, sprite_pos_id, sprite_slot_id);
					if img_name == "CALEN3" {
						out += "[00000000] 10: varop VAR_(28_0a)_a0_fb (14) := (00) 3\n";
						out += "[00000000] 10: varop VAR_(28_0a)_a0_fe (14) := (00) 3\n";
						out += "[00000000] 10: dayIntro 00000000 BGCAL3.cps\n";
					} else if img_name == "~" {
						if args[0] > 1 {
							out += "[00000000] 10: removeAllFG 3\n";
						} else {
							out += "[00000000] 10: removeFG 0 3\n";
						}
					} else if args[0] > 1 {
						let obj2 = &SCR_BYTES[msg_end as usize..msg_end as usize + 12];
						let img2_idx = obj2[4] as usize | ((obj2[5] as usize & 0xF) << 8);
						let img2_name = match obj2[5] >> 4 {
							3 => if img2_idx == 0xFFF {
								panic!("cannot be sprite removal")
							} else {
								SPRITE_NAMES[img2_idx]
							},
							x => panic!("expected sprite, {:X}", x)
						};
						let sprite2_slot_id = obj2[0];
						out += format!("[00000000] 11: multifgload2 00000000 {} {} 00000000 {} {}\n",
							img_name, sprite_slot_id,
							img2_name, sprite2_slot_id).as_str();
					} else {
						// sprite pos in N7 PSP format:
						// 0: middle
						// 1: left
						// else: right
						// sprite pos in N7E dec format:
						// 1: middle
						// 2: left
						// else: right
						sprite_pos_id = if graph_obj[3] == 0 {
							1
						} else {
							match sprite_pos_id {
								0 => 2,
								1 => 0,
								_ => 1
							}
						};
						out += format!("[00000000] 11: fgload {} 00000000 {} {} 3\n", sprite_slot_id, img_name, sprite_pos_id).as_str();
					}
				}
				for _ in 0..args[0] {
					graph_objs = format!("{} ${}$", graph_objs, to_hex(graph_obj));
				}
				println!("&{off:04X}: {}.{} {}-G{}{}", name, full_len, to_hex(&args[..3]), graph_objs, cmt);
				//println!("{}.{} {}-Z @{}", name, full_len, to_hex(&args[..3]), std::str::from_utf8(msg).unwrap());
			}
			"graph_pos" => {
				let mut cmt = String::new();
				if args[0] == 1 || args[0] == 3 {
					out = format!("{}[00000000] 10: moveFG {} {}\n", out, args[0], match args[3] {
						0 => 2,
						1 => 0,
						_ => 1
					});
					cmt = format!(" # fgmove {} {}", args[0], args[3]);
				}
				println!("&{off:04X}: {}.{} {}{}", name, full_len, to_hex(&args), cmt);
			}
			"file_read" => {
				println!("&{off:04X}: {}.{} {}", name, full_len, to_hex(&args));
				read_file = args[1];
			}
			"se_set" => {
				if args[0] == 0 {
					out = format!("{}[00000000] 10: playSFX {} 1\n", out, SE_NAMES[read_file as usize]);
				} else {
					out = format!("{}[00000000] 10: playBGM {}\n", out, read_file - 103);
				}
				println!("&{off:04X}: {}.{} {}", name, full_len, to_hex(&args));
			}
			"se_del" => {
				if args[0] == 0 {
					out += "[00000000] 10: stopSFX\n";
				} else {
					out += "[00000000] 10: stopBGM\n";
				}
				println!("&{off:04X}: {}.{} {}", name, full_len, to_hex(&args));
			}
			"se_wait" => {
				if args[0] == 0 && args[1] == 2 {
					out += "[00000000] 10: waitForSFX\n";
				} else {
					// probably just meant to wait for the bgm to load?
				}
				println!("&{off:04X}: {}.{} {}", name, full_len, to_hex(&args));
			}
			"time_wait" => {
				out = format!("{}[00000000] 10: delay {}\n", out, u16::from_le_bytes(args[1..].try_into().unwrap()));
				println!("&{off:04X}: {}.{} {}", name, full_len, to_hex(&args));
			}
			"effect_start" => {
				out = format!("{}[00000000] 10: cmd1 32\n", out);
				println!("&{off:04X}: {}.{} {}", name, full_len, to_hex(&args));
			}
			"effect_wait" => {
				if args[1] == 0xFC {
					out = format!("{}[00000000] 10: cmd2 13\n", out);
				}
				println!("&{off:04X}: {}.{} {}", name, full_len, to_hex(&args));
			}
			"fade_start" => {
				if args[0] == 0x82 {
					out = format!("{}[00000000] 10: removeBG 0 1 1\n", out);
				} else if args[0] == 0x80 {
					if args[1] == 1 {
						out = format!("{}[00000000] 10: fadetowhite\n", out);
					} else {
						out = format!("{}[00000000] 10: fadetoblack\n", out);
					}
				} else if args[0] == 0x7F {
					out = format!("{}[00000000] 10: fadein\n", out);
				}
				println!("&{off:04X}: {}.{} {}", name, full_len, to_hex(&args));
			}
			"msg_clear" => {
				out = format!("{}[00000000] 10: cmd24\n", out);
				println!("&{off:04X}: {}.{} {}", name, full_len, to_hex(&args));
			}
			_ => {
				println!("&{off:04X}: {}.{} {}", name, full_len, to_hex(&args));
				if name == "end" {
					out += "[00000000] 10: returnTitle\n";
					break;
				} else {
					let s = format!("{}.{}", name, full_len);
					if !unimpl.contains_key(&s) {
						unimpl.insert(s, format!("{}.{} {}", name, full_len, to_hex(&args)));
					}
				}
			}
		}
	}
	println!("unimplemented: {:#?}", unimpl.values());
	if apply_tl {
		std::fs::write("user08.dec", out.clone()).unwrap();
	}
	out += "[00000000] 10: appendstoryend user08\n";
	//std::fs::write(if apply_tl {"../../../games/n7e/script/append/user08.dec"} else {"../../../games/n7e/scriptja/append/user08.dec"}, out).unwrap();
	std::fs::write(if apply_tl {"../../../games/never7/n7e/script/append/user08.dec"} else {"../../../games/never7/n7e/scriptja/append/user08.dec"}, out).unwrap();
}

fn main() {
	run(false);
	run(true);
}